# Generated by Django 3.2.9 on 2021-12-25 13:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DailyQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('date', models.CharField(max_length=20)),
                ('updateTime', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('name', models.CharField(blank=True, choices=[('ias', 'ias'), ('jee', 'jee'), ('jeeMains', 'jeeMains'), ('jeeAdv', 'jeeAdv'), ('neet', 'neet'), ('ras', 'ras'), ('ibpsPO', 'ibpsPO'), ('ibpsClerk', 'ibpsClerk'), ('sscCHSL', 'sscCHSL'), ('sscCGL', 'sscCGL'), ('nda', 'nda'), ('cds', 'cds'), ('cat', 'cat'), ('ntpc', 'ntpc')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=1000)),
                ('isCorrect', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionBookmarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=50, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('difficulty', models.FloatField(blank=True, null=True)),
                ('ratings', models.FloatField(blank=True, null=True)),
                ('percentCorrect', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('isExpert', models.BooleanField(default=False)),
                ('subject', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyCompetitions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('round', models.IntegerField(default=0)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitions_exams', to='Questions.exams')),
                ('questions', models.ManyToManyField(blank=True, related_name='competition_questions', to='Questions.Questions')),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('name', models.CharField(choices=[('physicsAdv', 'physicsAdv'), ('mathsAdv', 'mathsAdv'), ('chemAdv', 'chemAdv'), ('physicsMains', 'physicsMains'), ('mathsMains', 'mathsMains'), ('chemMains', 'chemMains'), ('bio', 'bio'), ('reasoningHard', 'reasoningHard'), ('reasoningEasy', 'reasoningEasy'), ('currentAffairsWorld', 'currentAffairsWorld'), ('currentAffairsIndiaEasy', 'currentAffairsIndiaEasy'), ('currentAffairsIndiaHard', 'currentAffairsIndiaHard'), ('quantAptHard', 'quantAptHard'), ('quantAptEasy', 'quantAptEasy'), ('englishLangAndComprehension', 'englishLangAndComprehension'), ('basicComputer', 'basicComputer'), ('economyAndBanking', 'economyAndBanking'), ('geographyIndHard', 'geographyIndHard'), ('geographyIndEasy', 'geographyIndEasy'), ('geographyWorld', 'geographyWorld'), ('polityIndEasy', 'polityIndEasy'), ('polityIndHard', 'polityIndHard'), ('economyIndGen', 'economyIndGen'), ('economyIndBudgetAndSchemes', 'economyIndBudgetAndSchemes'), ('environmentAndEcologyEasy', 'environmentAndEcologyEasy'), ('environmentAndEcologyHard', 'environmentAndEcologyHard'), ('historyIndEasy', 'historyIndEasy'), ('historyIndHard', 'historyIndHard'), ('historyWorld', 'historyWorld'), ('InternationalRelationAndSecurity', 'InternationalRelationAndSecurity'), ('sciAndTechEasy', 'sciAndTechEasy'), ('sciAndTechHard', 'sciAndTechHard'), ('generalScience', 'generalScience'), ('geographyRajEasy', 'geographyRajEasy'), ('geographyRajHard', 'geographyRajHard'), ('historyRajEasy', 'historyRajEasy'), ('historyRajHard', 'historyRajHard'), ('artAndCultureRaj', 'artAndCultureRaj'), ('polityRajHard', 'polityRajHard'), ('polityRajEasy', 'polityRajEasy'), ('currentAffairsRajHard', 'currentAffairsRajHard'), ('currentAffairsRajEasy', 'currentAffairsRajEasy'), ('artAndCultureInd', 'artAndCultureInd'), ('economyRajHard', 'economyRajHard'), ('economyRajEasy', 'economyRajEasy'), ('constitutionAndGovernance', 'constitutionAndGovernance'), ('decisionMaking', 'decisionMaking'), ('ndaPhysics', 'ndaPhysics'), ('ndaHistory', 'ndaHistory'), ('ndaChemistry', 'ndaChemistry'), ('ndaMaths', 'ndaMaths'), ('cdsMaths', 'cdsMaths'), ('currentEvents', 'currentEvents'), ('dataAnalysisAndInterpretation', 'dataAnalysisAndInterpretation'), ('financialAwareness', 'financialAwareness'), ('financeAndAccounts', 'financeAndAccounts'), ('statistics', 'statistics')], default='mathsAdv', max_length=100000)),
                ('questions', models.ManyToManyField(blank=True, related_name='questions', to='Questions.Questions')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionsOfTheDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=50)),
                ('date', models.CharField(max_length=20)),
                ('questions', models.ManyToManyField(blank=True, related_name='questionsOfTheDays', to='Questions.Questions')),
            ],
        ),
    ]
